name: Build Debian images

on:
  push:
    branches: [ '*' ]
    tags: [ '*' ]

jobs:
  build:
    name: Build debian-buster ${{ matrix.client_arch }}
    runs-on: ubuntu-latest

    strategy:
      matrix:
        include:
          # amd64 hosts
          - host_arch: amd64
            client_arch: amd64
            host_releaser: true
          - host_arch: amd64
            client_arch: i386
          - host_arch: amd64
            client_arch: arm32v7
          - host_arch: amd64
            client_arch: arm64v8
          - host_arch: amd64
            client_arch: ppc64le
          - host_arch: amd64
            client_arch: s390x

          # i386 hosts
          - host_arch: i386
            client_arch: amd64
            host_releaser: true
          - host_arch: i386
            client_arch: i386
          - host_arch: i386
            client_arch: arm64v8
          - host_arch: i386
            client_arch: ppc64le

    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
        with:
          fetch-depth: 1
          submodules: recursive

      - name: Install dependencies
        run: |
          sudo apt-get update -q -y
          sudo apt-get -qq install -y qemu qemu-user-static
          docker run --rm --privileged multiarch/qemu-user-static --reset -p yes

      - name: Render templates
        run: ./scripts/render-templates.py

      - name: Build host image
        run: |
          latest_tag=elijahru/distcc-cross-compiler-host-debian-buster:latest-amd64
          dockerfile=rendered/Dockerfile.debian-buster.host.amd64
          docker pull $latest_tag || true
          docker build . \
            --file $dockerfile \
            --tag $latest_tag \
            --cache-from=$latest_tag

      - name: Build client image
        run: |
          latest_tag=elijahru/distcc-cross-compiler-client-debian-buster:latest-${{ matrix.client_arch }}
          dockerfile=rendered/Dockerfile.debian-buster.client.${{ matrix.client_arch }}

          docker pull $latest_tag || true
          docker build . \
            --file $dockerfile \
            --tag $latest_tag \
            --cache-from=$latest_tag

      - name: Run tests
        run: |
          ./scripts/run-tests-debian.sh \
            debian-buster \
            amd64 \
            debian-buster \
            ${{ matrix.client_arch }}

      - name: Tag host release image
        if: ${{ github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags/') && matrix.host_releaser }}
        run: |
          version=$(basename ${{ github.ref }})
          latest_tag=elijahru/distcc-cross-compiler-host-debian-buster:latest-amd64
          version_tag=elijahru/distcc-cross-compiler-host-debian-buster:${version}-amd64

          echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login \
            -u elijahru --password-stdin

          docker images
          docker tag $latest_tag $version_tag
          docker push $latest_tag
          docker push $version_tag

      - name: Tag client release image
        if: ${{ github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags/') }}
        run: |
          version=$(basename ${{ github.ref}})
          latest_tag=elijahru/distcc-cross-compiler-client-debian-buster:latest-${{ matrix.client_arch }}
          version_tag=elijahru/distcc-cross-compiler-client-debian-buster:${version}-${{ matrix.client_arch }}

          echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login \
            -u elijahru --password-stdin

          docker images
          docker tag $latest_tag $version_tag
          docker push $latest_tag
          docker push $version_tag

  push_manifests:
    name: Push manifests
    if: ${{ github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags/') }}

    runs-on: ubuntu-latest
    needs: build

    strategy:
      matrix:
        version: [ latest, '${{ github.ref }}' ]

    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
        with:
          fetch-depth: 1
          submodules: recursive

      - name: Push manifest
        run: |
          echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login \
            -u elijahru --password-stdin
          docker images
          ./scripts/push-manifests-debian.sh \
            $(basename ${{ matrix.version }}) \
            debian-buster
