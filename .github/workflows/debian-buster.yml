# Rendered from .github/workflows/build.yml.jinja

name: debian:buster

on:
  push:
    branches: ['*']
    tags: ['*']

jobs:
  build-amd64-host:
    name: |
      host amd64
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repo
      uses: actions/checkout@v2
      with:
        fetch-depth: 1
        submodules: recursive

    - name: Install emulation dependencies
      run: |
        sudo apt-get update -q -y
        sudo apt-get -qq install -y qemu qemu-user-static
        docker run --rm --privileged multiarch/qemu-user-static --reset -p yes

    - name: Install pip requirements
      run: |
        pip3 install -r requirements.txt

    - name: Build host image
      run: |
        ./builder.py build-host \
          --distro debian:buster \
          --host-arch amd64 \
          --tag $(basename ${{ github.event.ref }})

  build-amd64-clients:
    name: |
      client ${{ matrix.compiler_arch }}
    runs-on: ubuntu-latest
    needs: build-amd64-host

    strategy:
      matrix:
        include:
        - host_arch: amd64
          compiler_arch: amd64

        - host_arch: amd64
          compiler_arch: i386

        - host_arch: amd64
          compiler_arch: arm32v7

        - host_arch: amd64
          compiler_arch: arm64v8

        - host_arch: amd64
          compiler_arch: ppc64le

        - host_arch: amd64
          compiler_arch: s390x


    steps:
    - name: Checkout repo
      uses: actions/checkout@v2
      with:
        fetch-depth: 1
        submodules: recursive

    - name: Install emulation dependencies
      run: |
        sudo apt-get update -q -y
        sudo apt-get -qq install -y qemu qemu-user-static
        docker run --rm --privileged multiarch/qemu-user-static --reset -p yes

    - name: Install pip requirements
      run: |
        pip3 install -r requirements.txt

    - name: Build client image
      run: |
        ./builder.py build-client \
          --distro debian:buster \
          --client-arch ${{ matrix.compiler_arch }} \
          --tag $(basename ${{ github.event.ref }})

    - name: Run tests
      run: |
        ./builder.py test \
          --distro debian:buster \
          --host-arch amd64 \
          --client-arch ${{ matrix.compiler_arch }} \
          --tag $(basename ${{ github.event.ref }})


  build-i386-host:
    name: |
      host i386
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repo
      uses: actions/checkout@v2
      with:
        fetch-depth: 1
        submodules: recursive

    - name: Install emulation dependencies
      run: |
        sudo apt-get update -q -y
        sudo apt-get -qq install -y qemu qemu-user-static
        docker run --rm --privileged multiarch/qemu-user-static --reset -p yes

    - name: Install pip requirements
      run: |
        pip3 install -r requirements.txt

    - name: Build host image
      run: |
        ./builder.py build-host \
          --distro debian:buster \
          --host-arch i386 \
          --tag $(basename ${{ github.event.ref }})

  build-i386-clients:
    name: |
      client ${{ matrix.compiler_arch }}
    runs-on: ubuntu-latest
    needs: build-i386-host

    strategy:
      matrix:
        include:
        - host_arch: i386
          compiler_arch: amd64

        - host_arch: i386
          compiler_arch: i386

        - host_arch: i386
          compiler_arch: arm64v8

        - host_arch: i386
          compiler_arch: ppc64le


    steps:
    - name: Checkout repo
      uses: actions/checkout@v2
      with:
        fetch-depth: 1
        submodules: recursive

    - name: Install emulation dependencies
      run: |
        sudo apt-get update -q -y
        sudo apt-get -qq install -y qemu qemu-user-static
        docker run --rm --privileged multiarch/qemu-user-static --reset -p yes

    - name: Install pip requirements
      run: |
        pip3 install -r requirements.txt

    - name: Build client image
      run: |
        ./builder.py build-client \
          --distro debian:buster \
          --client-arch ${{ matrix.compiler_arch }} \
          --tag $(basename ${{ github.event.ref }})

    - name: Run tests
      run: |
        ./builder.py test \
          --distro debian:buster \
          --host-arch i386 \
          --client-arch ${{ matrix.compiler_arch }} \
          --tag $(basename ${{ github.event.ref }})


  build-arm32v7-host:
    name: |
      host arm32v7
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repo
      uses: actions/checkout@v2
      with:
        fetch-depth: 1
        submodules: recursive

    - name: Install emulation dependencies
      run: |
        sudo apt-get update -q -y
        sudo apt-get -qq install -y qemu qemu-user-static
        docker run --rm --privileged multiarch/qemu-user-static --reset -p yes

    - name: Install pip requirements
      run: |
        pip3 install -r requirements.txt

    - name: Build host image
      run: |
        ./builder.py build-host \
          --distro debian:buster \
          --host-arch arm32v7 \
          --tag $(basename ${{ github.event.ref }})

  build-arm32v7-clients:
    name: |
      client ${{ matrix.compiler_arch }}
    runs-on: ubuntu-latest
    needs: build-arm32v7-host

    strategy:
      matrix:
        include:
        - host_arch: arm32v7
          compiler_arch: arm32v7


    steps:
    - name: Checkout repo
      uses: actions/checkout@v2
      with:
        fetch-depth: 1
        submodules: recursive

    - name: Install emulation dependencies
      run: |
        sudo apt-get update -q -y
        sudo apt-get -qq install -y qemu qemu-user-static
        docker run --rm --privileged multiarch/qemu-user-static --reset -p yes

    - name: Install pip requirements
      run: |
        pip3 install -r requirements.txt

    - name: Build client image
      run: |
        ./builder.py build-client \
          --distro debian:buster \
          --client-arch ${{ matrix.compiler_arch }} \
          --tag $(basename ${{ github.event.ref }})

    - name: Run tests
      run: |
        ./builder.py test \
          --distro debian:buster \
          --host-arch arm32v7 \
          --client-arch ${{ matrix.compiler_arch }} \
          --tag $(basename ${{ github.event.ref }})


  build-arm64v8-host:
    name: |
      host arm64v8
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repo
      uses: actions/checkout@v2
      with:
        fetch-depth: 1
        submodules: recursive

    - name: Install emulation dependencies
      run: |
        sudo apt-get update -q -y
        sudo apt-get -qq install -y qemu qemu-user-static
        docker run --rm --privileged multiarch/qemu-user-static --reset -p yes

    - name: Install pip requirements
      run: |
        pip3 install -r requirements.txt

    - name: Build host image
      run: |
        ./builder.py build-host \
          --distro debian:buster \
          --host-arch arm64v8 \
          --tag $(basename ${{ github.event.ref }})

  build-arm64v8-clients:
    name: |
      client ${{ matrix.compiler_arch }}
    runs-on: ubuntu-latest
    needs: build-arm64v8-host

    strategy:
      matrix:
        include:
        - host_arch: arm64v8
          compiler_arch: amd64

        - host_arch: arm64v8
          compiler_arch: i386

        - host_arch: arm64v8
          compiler_arch: arm64v8


    steps:
    - name: Checkout repo
      uses: actions/checkout@v2
      with:
        fetch-depth: 1
        submodules: recursive

    - name: Install emulation dependencies
      run: |
        sudo apt-get update -q -y
        sudo apt-get -qq install -y qemu qemu-user-static
        docker run --rm --privileged multiarch/qemu-user-static --reset -p yes

    - name: Install pip requirements
      run: |
        pip3 install -r requirements.txt

    - name: Build client image
      run: |
        ./builder.py build-client \
          --distro debian:buster \
          --client-arch ${{ matrix.compiler_arch }} \
          --tag $(basename ${{ github.event.ref }})

    - name: Run tests
      run: |
        ./builder.py test \
          --distro debian:buster \
          --host-arch arm64v8 \
          --client-arch ${{ matrix.compiler_arch }} \
          --tag $(basename ${{ github.event.ref }})


  build-ppc64le-host:
    name: |
      host ppc64le
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repo
      uses: actions/checkout@v2
      with:
        fetch-depth: 1
        submodules: recursive

    - name: Install emulation dependencies
      run: |
        sudo apt-get update -q -y
        sudo apt-get -qq install -y qemu qemu-user-static
        docker run --rm --privileged multiarch/qemu-user-static --reset -p yes

    - name: Install pip requirements
      run: |
        pip3 install -r requirements.txt

    - name: Build host image
      run: |
        ./builder.py build-host \
          --distro debian:buster \
          --host-arch ppc64le \
          --tag $(basename ${{ github.event.ref }})

  build-ppc64le-clients:
    name: |
      client ${{ matrix.compiler_arch }}
    runs-on: ubuntu-latest
    needs: build-ppc64le-host

    strategy:
      matrix:
        include:
        - host_arch: ppc64le
          compiler_arch: amd64

        - host_arch: ppc64le
          compiler_arch: i386

        - host_arch: ppc64le
          compiler_arch: arm64v8

        - host_arch: ppc64le
          compiler_arch: ppc64le


    steps:
    - name: Checkout repo
      uses: actions/checkout@v2
      with:
        fetch-depth: 1
        submodules: recursive

    - name: Install emulation dependencies
      run: |
        sudo apt-get update -q -y
        sudo apt-get -qq install -y qemu qemu-user-static
        docker run --rm --privileged multiarch/qemu-user-static --reset -p yes

    - name: Install pip requirements
      run: |
        pip3 install -r requirements.txt

    - name: Build client image
      run: |
        ./builder.py build-client \
          --distro debian:buster \
          --client-arch ${{ matrix.compiler_arch }} \
          --tag $(basename ${{ github.event.ref }})

    - name: Run tests
      run: |
        ./builder.py test \
          --distro debian:buster \
          --host-arch ppc64le \
          --client-arch ${{ matrix.compiler_arch }} \
          --tag $(basename ${{ github.event.ref }})


  build-s390x-host:
    name: |
      host s390x
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repo
      uses: actions/checkout@v2
      with:
        fetch-depth: 1
        submodules: recursive

    - name: Install emulation dependencies
      run: |
        sudo apt-get update -q -y
        sudo apt-get -qq install -y qemu qemu-user-static
        docker run --rm --privileged multiarch/qemu-user-static --reset -p yes

    - name: Install pip requirements
      run: |
        pip3 install -r requirements.txt

    - name: Build host image
      run: |
        ./builder.py build-host \
          --distro debian:buster \
          --host-arch s390x \
          --tag $(basename ${{ github.event.ref }})

  build-s390x-clients:
    name: |
      client ${{ matrix.compiler_arch }}
    runs-on: ubuntu-latest
    needs: build-s390x-host

    strategy:
      matrix:
        include:
        - host_arch: s390x
          compiler_arch: s390x


    steps:
    - name: Checkout repo
      uses: actions/checkout@v2
      with:
        fetch-depth: 1
        submodules: recursive

    - name: Install emulation dependencies
      run: |
        sudo apt-get update -q -y
        sudo apt-get -qq install -y qemu qemu-user-static
        docker run --rm --privileged multiarch/qemu-user-static --reset -p yes

    - name: Install pip requirements
      run: |
        pip3 install -r requirements.txt

    - name: Build client image
      run: |
        ./builder.py build-client \
          --distro debian:buster \
          --client-arch ${{ matrix.compiler_arch }} \
          --tag $(basename ${{ github.event.ref }})

    - name: Run tests
      run: |
        ./builder.py test \
          --distro debian:buster \
          --host-arch s390x \
          --client-arch ${{ matrix.compiler_arch }} \
          --tag $(basename ${{ github.event.ref }})



